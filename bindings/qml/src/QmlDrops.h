/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
*/

#ifndef QML_DROPS_H
#define QML_DROPS_H

#include <QtQml>

#include <drops.h>


class QmlDropsAttached;

class QmlDrops : public QObject
{
    Q_OBJECT
    
public:
    drops_t *self;
    
    QmlDrops() { self = NULL; } // TODO: prevent declarative use - could lead to SEGV
    
    static QObject* qmlAttachedProperties(QObject* object); // defined in QmlDrops.cpp
    
public slots:
    //  Receive next message from drops agent
    zmsg_t *recv () {
        return drops_recv (self);
    };

    //  Return handle to the drops agent, for polling
    void *socket () {
        return drops_socket (self);
    };
};

class QmlDropsAttached : public QObject
{
    Q_OBJECT
    QObject* m_attached;
    
public:
    QmlDropsAttached (QObject* attached) {
        Q_UNUSED (attached);
    };
    
public slots:
    //  Self test of this class
    void test (bool verbose) {
        return drops_test (verbose);
    };

    //  Constructor, creates a new drops agent
    QmlDrops *construct (const QString &path) {
        QmlDrops *qmlSelf = new QmlDrops ();
        qmlSelf->self = drops_new (path.toUtf8().data());
        return qmlSelf;
    };

    //  Destructor, ends and destroys a drops service
    void destruct (QmlDrops *qmlSelf) {
        return drops_destroy (&qmlSelf->self);
    };
};


QML_DECLARE_TYPEINFO(QmlDrops, QML_HAS_ATTACHED_PROPERTIES)

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
*/
